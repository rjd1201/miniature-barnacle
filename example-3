#include <stdio.h>
#include <stdlib.h>

// Trie düğüm yapısı
typedef struct TrieNode {
    char karakter; // Düğümün karakteri
    struct TrieNode* çocuklar[26]; // 
    int kelime_sonu; // Düğümün kelime sonu olup olmadığını gösterir
} TrieNode;

// Yeni bir Trie düğümü oluşturur
TrieNode* createTrieNode(char karakter) {
    TrieNode* düğüm = (TrieNode*)malloc(sizeof(TrieNode));
    düğüm->karakter = karakter;
    for (int i = 0; i < 26; i++) {
        düğüm->çocuklar[i] = NULL;
    }
    düğüm->kelime_sonu = 0;
    return düğüm;
}

// Trie'ye bir kelime ekler
void insertTrie(TrieNode* kök, char* kelime) {
    TrieNode* temp = kök;
    for (int i = 0; kelime[i] != '\0'; i++) {
        int idx = kelime[i] - 'a';
        if (temp->çocuklar[idx] == NULL) {
            temp->çocuklar[idx] = createTrieNode(kelime[i]);
        }
        temp = temp->çocuklar[idx];
    }
    temp->kelime_sonu = 1;
}

// Trie'yi yazdırır
void printTrie(TrieNode* kök) {
    if (!kök) {
        return;
    }
    printf("%c ", kök->karakter);
    for (int i = 0; i < 26; i++) {
        if (kök->çocuklar[i] != NULL) {
            printTrie(kök->çocuklar[i]);
        }
    }
}

int main() {
    TrieNode* kök = createTrieNode('\0');
    insertTrie(kök, "hello");
    insertTrie(kök, "world");
    printTrie(kök);
    return 0;
}
